# sgi 環境でのビルドはちょっとした注意がいります．
#
# - gcc を使う場合．
#   IINC には空の値を設定してください．
#   gcc が n32 object を出力するか o32 object を出力するかで，
#   LLIB のパスが変わります．
#    o32 object の場合 -> LLIB = -L/usr/lib
#    n32 object の場合 -> LLIB = -L/usr/lib32
#   『Expecting n32 objects: /usr/lib/libX11.so is o32.』のよう
#   なエラーが出たら，LLIB = -L/usr/lib32 に変更してみてください．
#
# - 純正の C コンパイラを使う場合．
#   IINC = -I/usr/include としてください．
#   ビルドするライブラリの object 形式，o32,n32,64 のうちの1つ
#   を CFLAGS で選んでください．このオプション(-32,-n32,-64)が
#   ない場合はデフォルトの object 形式が選ばれますが，C コンパ
#   イラの新旧で o32 だったり n32 だったりするようです．object
#   の形式による LLIB の指定は以下の通りです．
#    o32 object の場合 -> LLIB = -L/usr/lib
#    n32 object の場合 -> LLIB = -L/usr/lib32
#    64 object の場合  -> LLIB = -L/usr/lib64

#EGGX/ProCALL をビルドする時の C コンパイラ
CC    = gcc
#CC    = cc

#gcc を使う場合
CFLAGS = -O2 -Wall
#純正 C コンパイラを使う場合
#CFLAGS = -O2
#CFLAGS = -32 -O2
#CFLAGS = -n32 -O2
#CFLAGS = -64 -O2

DESTDIR =

#ユーザが利用する C コンパイラ，フラグ
USERCC   = gcc
USERCCFLAGS = -O2 -Wall
#USERCC   = cc
#USERCCFLAGS = -O2
#USERCCFLAGS = -32 -O2
#USERCCFLAGS = -n32 -O2
#USERCCFLAGS = -64 -O2

#ユーザが利用する FORTRAN コンパイラ，フラグ
USERFC   = f77
USERFCFLAGS = -O2
#USERFCFLAGS = -32 -O2
#USERFCFLAGS = -n32 -O2
#USERFCFLAGS = -64 -O2
#USERFC   = g77
#USERFCFLAGS = -O2 -Wall

#X11/Xlib.h のあるディレクトリ
#gcc を使う場合
IINC  =
#純正 C コンパイラを使う場合
#IINC  = -I/usr/include

#libX11.a libX11.so のあるディレクトリ
LLIB  = -L/usr/lib
#LLIB  = -L/usr/lib32
#LLIB  = -L/usr/lib64

PREFIX = /usr/local

INCDIR = $(PREFIX)/include
LIBDIR = $(PREFIX)/lib
#LIBDIR = $(PREFIX)/lib64
BINDIR = $(PREFIX)/bin

#root になれない場合は以下の 2 行は # でコメントにする
LOCALINC = -I$(INCDIR)
LOCALLIB = -L$(LIBDIR)

#root になれない場合の設定
#(eggx*.h, libeggx.a, egg を同一ディレクトリに入れる場合は
# LOCALINC LOCALLIB は空でもよい)
#LOCALINC =
#LOCALLIB =
#LOCALINC = -I${HOME}/EGGX
#LOCALLIB = -L${HOME}/EGGX
#LOCALINC = -I${HOME}/include
#LOCALLIB = -L${HOME}/lib

LLINKS = -leggx -lX11 -lm

#for Solaris,IRIX
VDEFS = -DNO_ISINF

#for the system without mkstemp
#TDEFS = -DNO_MKSTEMP

#for the system without usleep
#UDEFS = -DNO_USLEEP

#for the system without vsnprintf
#PDEFS = -DNO_VSNPRINTF

##CFLAGS = -O2 -Wreturn-type -Wswitch -Wformat -Wuninitialized -Wparentheses

DEFS = $(VDEFS) $(TDEFS) $(UDEFS) $(PDEFS)

all:: _xslave_ mkexheader exec_xslave.h lib egg

install:: lib egg
	if [ ! -d $(DESTDIR)$(LIBDIR) ];then sh install-sh -d $(DESTDIR)$(LIBDIR); fi
	if [ ! -d $(DESTDIR)$(INCDIR) ];then sh install-sh -d $(DESTDIR)$(INCDIR); fi
	if [ ! -d $(DESTDIR)$(BINDIR) ];then sh install-sh -d $(DESTDIR)$(BINDIR); fi
	sh install-sh -m 644 libeggx.a $(DESTDIR)$(LIBDIR)
	sh install-sh -m 644 eggx*.h $(DESTDIR)$(INCDIR)
	sh install-sh -m 755 egg $(DESTDIR)$(BINDIR)

.c.o:   ; $(CC) $(CFLAGS) $(IINC) $(DEFS) -c $*.c

_xslave_: _xslave_.o
	$(CC) $(CFLAGS) _xslave_.o -o _xslave_ $(LLIB) -lX11

mkexheader: mkexheader.o
	$(CC) $(CFLAGS) mkexheader.o -o mkexheader

exec_xslave.h: mkexheader _xslave_
	./mkexheader _xslave_ > exec_xslave.h

eggx_base.o: exec_xslave.h

lib:: eggx_base.o eggx_color.o
	ar cruvs libeggx.a eggx_base.o eggx_color.o

egg:: egg.sh
	cat egg.sh > egg
	rm -f egg.t
	for i in USERCC "x@@$(USERCC)" USERFC "x@@$(USERFC)" \
	  USERCCFLAGS "x@@$(USERCCFLAGS)" USERFCFLAGS "x@@$(USERFCFLAGS)" \
	  IINC "x@@$(IINC)" LLIB "x@@$(LLIB)" LOCALINC "x@@$(LOCALINC)" \
	  LOCALLIB "x@@$(LOCALLIB)" LLINKS "x@@$(LLINKS)" ; do { \
	  if [ -f egg.t ] ; then \
	    if [ "$$i" = "x@@" ] ; then \
	      cat egg.t | sed -e "s|@@@TARGET@@@||" > egg ; \
	    else \
	      cat egg.t | sed -e "s|@@@TARGET@@@|$$i|" | sed -e 's|x@@||' > egg ; \
	    fi ; \
	    rm -f egg.t ; \
	  else \
	    cat egg | sed -e "s|@$$i@|@@@TARGET@@@|" > egg.t ; \
	  fi ; \
	} done
	chmod 755 egg

clean::
	rm -f *.o *.exe egg egg.t libeggx.a _xslave_ mkexheader exec_xslave.h

